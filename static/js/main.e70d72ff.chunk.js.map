{"version":3,"sources":["features/Todo/TodoItem.module.css","components/NetworkStatus/NetworkStatus.module.css","components/SnackBar/SnackBar.module.css","components/TodoItemReminder/TodoItemReminder.module.css","App.module.css","components/NetworkStatus/status.js","components/NetworkStatus/index.js","features/Todo/TodoModel.js","features/Todo/todoSlice.js","redux/settingsSlice.js","components/DatePicker/DatePicker.jsx","helpers/notifications.js","components/TodoItemReminder/index.jsx","components/ContentEditable/index.jsx","features/Todo/TodoItem.js","features/Todo/DraggableTodo.js","components/AddTodoForm/AddTodoForm.jsx","components/SnackBar/SnackBar.jsx","pages/Home.jsx","pages/Settings.jsx","components/Navbar.jsx","App.js","serviceWorkerRegistration.js","redux/store.js","index.js"],"names":["module","exports","ONLINE","OFFLINE","connection","navigator","mozConnection","webkitConnection","online_types","getStatus","type","includes","isOnline","a","window","onLine","url","URL","location","origin","searchParams","set","Date","now","fetch","toString","method","response","ok","NetworkStatus","className","props","useState","status","setStatus","textRef","useRef","useEffect","current","classList","remove","styles","animate","offsetWidth","add","statusCheck","callback","handleChange","console","log","addEventListener","check","cleanup","removeEventListener","handleOnline","handleOffline","getNetworkStatus","then","title","classNames","ref","text","TODO_STATUS","modifyTodo","todo","properties","Object","keys","forEach","key","modified","toISOString","todoSlice","createSlice","name","initialState","items","reducers","addTodo","state","action","push","payload","id","uuid","created","undefined","reminders","updateTodo","find","item","removeTodo","index","findIndex","splice","completeTodo","openTodo","reorder","endIndex","removed","addReminder","tag","timestamp","createReminder","removeReminder","actions","selectTodos","todos","present","settingsSlice","allowNotification","darkMode","updateSimpleSetting","settingsKey","value","selectDarkMode","settings","selectAllowNotifications","DatePicker","required","onTimeAccepted","dateVal","setDateVal","validated","setValidated","hasError","setHasError","Form","noValidate","onSubmit","event","form","currentTarget","preventDefault","stopPropagation","checkValidity","Label","htmlFor","InputGroup","Control","min","DateTime","plus","minutes","toISO","split","slice","join","onChange","e","Button","variant","Feedback","style","display","createScheduledNotification","Notification","prototype","serviceWorker","getRegistration","registration","requestPermission","showNotification","body","showTrigger","TimestampTrigger","data","href","cancelScheduledNotification","getNotifications","includeTriggered","notification","close","TodoItemReminder","dispatch","useDispatch","allowed","useSelector","permission","catch","error","settingsWrap","time","fromISO","toMillis","result","alert","length","list","map","r","fromMillis","toLocaleString","DATETIME_MED","onClick","ContentEditable","label","document","activeElement","range","createRange","selectNodeContents","collapse","selection","getSelection","removeAllRanges","addRange","role","contentEditable","suppressContentEditableWarning","onInput","DONE","OPEN","TodoItem","onDeleteItem","showSettings","setShowSettings","isDeleting","setIsDeleting","debouncedUpdate","debounce","isDone","Row","as","fadeIn","fadeOut","Col","xs","grip","Check","Input","checked","target","control","textContent","setTimeout","forwardRef","DraggableTodo","getItemStyle","isDragging","draggableStyle","userSelect","border","draggableId","provided","snapshot","innerRef","draggableProps","dragHandleProps","AddTodoForm","setTitle","aria-label","aria-describedby","SnackBar","actionTitle","onClose","timeout","clearTimeout","snackWrap","snackInner","actionWrap","HomePage","showUndo","setShowUndo","completed","filter","onDelete","Container","onDragEnd","destination","droppableId","droppableProps","placeholder","ActionCreators","undo","SettingsPage","allSettings","inline","OurNavbar","bg","prefersDarkScheme","matchMedia","matches","Navbar","expand","Brand","Link","to","Toggle","aria-controls","Collapse","Nav","App","path","exact","Home","Settings","footer","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","register","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","rootReducer","combineReducers","undoable","todoReducer","limit","settingsReducer","persistConfig","version","storage","persistedReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","render","StrictMode","loading","getElementById","process","headers","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.e70d72ff.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"check\":\"TodoItem_check__1Vyp5\",\"control\":\"TodoItem_control__Pk4k4\",\"grip\":\"TodoItem_grip__18YEZ\",\"remove\":\"TodoItem_remove__3Pi93\",\"fadeIn\":\"TodoItem_fadeIn__2SAdo\",\"fadeOut\":\"TodoItem_fadeOut__39KgA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"status\":\"NetworkStatus_status__jwDJp\",\"online\":\"NetworkStatus_online__31Mwq\",\"offline\":\"NetworkStatus_offline__1rOSz\",\"text\":\"NetworkStatus_text__22sfn\",\"animate\":\"NetworkStatus_animate__1709a\",\"quickReveal\":\"NetworkStatus_quickReveal__3u39r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"snackWrap\":\"SnackBar_snackWrap__16cIp\",\"snackInner\":\"SnackBar_snackInner__1vwPc\",\"actionWrap\":\"SnackBar_actionWrap__10IA_\",\"action\":\"SnackBar_action__3MmYh\",\"close\":\"SnackBar_close__3aLzP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settingsWrap\":\"TodoItemReminder_settingsWrap__1Vc_8\",\"list\":\"TodoItemReminder_list__3JAY8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"App_footer__29Fsv\"};","export const ONLINE = 'online';\nexport const OFFLINE = 'offline';\n\nconst connection = navigator.connection || navigator.mozConnection || navigator.webkitConnection;\n\nconst online_types = ['bluetooth', 'cellular', 'ethernet', 'wifi', 'wimax', 'other', 'unknown'];\n\nfunction getStatus(type) {\n  if (online_types.includes(type)) {\n    return ONLINE;\n  } else {\n    return OFFLINE;\n  }\n}\n\nasync function isOnline() {\n  // some help from: https://dev.to/maxmonteil/is-your-app-online-here-s-how-to-reliably-know-in-just-10-lines-of-js-guide-3in7\n  if (!window.navigator.onLine) return OFFLINE;\n\n  // avoid CORS errors with a request to your own origin\n  const url = new URL(window.location.origin);\n\n  // random value to prevent cached responses\n  url.searchParams.set('rand', Date.now());\n\n  try {\n    const response = await fetch(url.toString(), { method: 'HEAD' });\n\n    return response.ok ? ONLINE : OFFLINE;\n  } catch {\n    return OFFLINE;\n  }\n}\n\nexport function getNetworkStatus(callback) {\n  if (connection && connection.type) {\n    console.log('🔌 - using navigtor.connection.type to check network status');\n    function handleChange() {\n      callback(getStatus(connection.type));\n    }\n\n    connection.addEventListener('change', handleChange);\n\n    return {\n      check: async () => getStatus(connection.type),\n      cleanup: () => connection.removeEventListener('change', handleChange),\n    };\n  }\n\n  console.log('🔌 - using navigtor.onLine and fallback to check network status');\n\n  function handleOnline() {\n    callback(ONLINE);\n  }\n  function handleOffline() {\n    callback(OFFLINE);\n  }\n  window.addEventListener('online', handleOnline);\n  window.addEventListener('offline', handleOffline);\n\n  return {\n    check: isOnline,\n    cleanup: () => {\n      window.removeEventListener('online', handleOnline);\n      window.removeEventListener('offline', handleOffline);\n    },\n  };\n}\n","import { useState, useEffect, useRef } from 'react';\nimport classNames from 'classnames';\nimport styles from 'components/NetworkStatus/NetworkStatus.module.css';\nimport { getNetworkStatus } from './status';\n\nfunction NetworkStatus({ className, ...props }) {\n  const [status, setStatus] = useState(null);\n  const textRef = useRef(null);\n\n  useEffect(() => {\n    // little \"hack\" to restart a CSS animation when the status changes\n    // src: https://css-tricks.com/restart-css-animation/\n    if (textRef.current) {\n      textRef.current.classList.remove(styles.animate);\n      void textRef.current.offsetWidth;\n      textRef.current.classList.add(styles.animate);\n    }\n  }, [status]);\n\n  useEffect(() => {\n    const statusCheck = getNetworkStatus(setStatus);\n\n    statusCheck.check().then(setStatus);\n\n    return statusCheck.cleanup;\n  }, []);\n\n  if (status === null) return null;\n\n  return (\n    <div className=\"d-flex align-items-center\">\n      <span\n        title={status}\n        {...props}\n        className={classNames(className, styles.status, styles[status])}\n      />\n      <span ref={textRef} className={styles.text}>\n        {status}\n      </span>\n    </div>\n  );\n}\n\nexport default NetworkStatus;\n","import { v4 as uuid } from 'uuid';\n\nexport const TODO_STATUS = {\n  OPEN: 'open',\n  DONE: 'done',\n};\n\nexport function createReminder(tag, timestamp) {\n  return {\n    tag,\n    timestamp,\n  };\n}\n\nexport function createTodo(title) {\n  return {\n    id: uuid(),\n    title,\n    status: TODO_STATUS.OPEN,\n    created: new Date().toISOString(),\n    modified: undefined,\n    reminders: [],\n  };\n}\n\nexport function modifyTodo(todo, properties) {\n  Object.keys(properties).forEach((key) => {\n    todo[key] = properties[key];\n  });\n  todo.modified = new Date().toISOString();\n}\n","import { createSlice } from '@reduxjs/toolkit';\nimport { createTodo, modifyTodo, createReminder, TODO_STATUS } from 'features/Todo/TodoModel';\n\nconst initialState = {\n  items: [],\n};\n\nexport const todoSlice = createSlice({\n  name: 'todos',\n  initialState,\n  reducers: {\n    addTodo: (state, action) => {\n      state.items.push(createTodo(action.payload));\n    },\n\n    updateTodo: (state, action) => {\n      const { id, title } = action.payload;\n      const todo = state.items.find((item) => id === item.id);\n      if (todo) {\n        modifyTodo(todo, { title });\n      }\n    },\n\n    removeTodo: (state, action) => {\n      const { payload: id } = action;\n      const index = state.items.findIndex((todo) => todo.id === id);\n      if (index >= 0) {\n        state.items.splice(index, 1);\n      }\n    },\n\n    completeTodo: (state, action) => {\n      const { payload: id } = action;\n      const todo = state.items.find((item) => id === item.id);\n      if (todo) {\n        modifyTodo(todo, { status: TODO_STATUS.DONE });\n      }\n    },\n\n    openTodo: (state, action) => {\n      const { payload: id } = action;\n      const todo = state.items.find((item) => id === item.id);\n      if (todo) {\n        modifyTodo(todo, { status: TODO_STATUS.OPEN });\n      }\n    },\n\n    reorder: (state, action) => {\n      const { id, endIndex } = action.payload;\n      const index = state.items.findIndex((todo) => todo.id === id);\n      if (index >= 0) {\n        const [removed] = state.items.splice(index, 1);\n        state.items.splice(endIndex, 0, removed);\n      }\n    },\n\n    addReminder: (state, action) => {\n      const { id, tag, timestamp } = action.payload;\n      const todo = state.items.find((item) => id === item.id);\n      todo.reminders = todo.reminders || [];\n      if (todo) {\n        todo.reminders.push(createReminder(tag, timestamp));\n      }\n    },\n\n    removeReminder: (state, action) => {\n      const { id, tag } = action.payload;\n      const todo = state.items.find((item) => id === item.id);\n      if (todo) {\n        const index = todo.reminders.findIndex((todo) => todo.tag === tag);\n        if (index >= 0) {\n          todo.reminders.splice(index, 1);\n        }\n      }\n    },\n  },\n});\n\nexport const {\n  addTodo,\n  updateTodo,\n  removeTodo,\n  completeTodo,\n  openTodo,\n  reorder,\n  addReminder,\n  removeReminder,\n} = todoSlice.actions;\n\nexport const selectTodos = (state) => state.todos.present.items;\n\nexport default todoSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  allowNotification: false,\n  darkMode: \"system\",\n};\n\nexport const settingsSlice = createSlice({\n  name: 'settings',\n  initialState,\n  reducers: {\n    updateSimpleSetting: (state, action) => {\n      const { settingsKey, value } = action.payload;\n      state[settingsKey] = value;\n    },\n  },\n});\n\nexport const { updateSimpleSetting } = settingsSlice.actions;\n\nexport const selectDarkMode = (state) => state.settings.darkMode;\nexport const selectAllowNotifications = (state) => state.settings.allowNotification;\n\nexport default settingsSlice.reducer;\n","import { useState } from 'react';\nimport { Form, InputGroup, Button } from 'react-bootstrap';\nimport { DateTime } from 'luxon';\n\nfunction getMinTime() {\n  return DateTime.now().plus({ minutes: 1 }).toISO().split(':').slice(0, 2).join(':');\n}\n\nfunction DatePicker({ required, onTimeAccepted = () => {} }) {\n  const [dateVal, setDateVal] = useState('');\n  const [validated, setValidated] = useState(false);\n  const [hasError, setHasError] = useState(false);\n\n  const handleSubmit = (event) => {\n    const form = event.currentTarget;\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (form.checkValidity() === true) {\n      onTimeAccepted(dateVal);\n      setHasError(false);\n    } else {\n      setHasError(true);\n    }\n\n    setValidated(true);\n  };\n\n  return (\n    <Form noValidate validated={validated} onSubmit={handleSubmit}>\n      <Form.Label htmlFor=\"addNotifcationReminder\">Choose a reminder time:</Form.Label>\n      <InputGroup>\n        <Form.Control\n          required={required}\n          type=\"datetime-local\"\n          id=\"addNotifcationReminder\"\n          name=\"notifcationReminder\"\n          value={dateVal}\n          min={getMinTime()}\n          onChange={(e) => {\n            if (validated) setValidated(false);\n            setDateVal(e.currentTarget.value);\n          }}\n        />\n\n        <Button variant=\"primary\" type=\"submit\">\n          <i className=\"bi bi-plus-lg\" />\n          <span className=\"visually-hidden\">add reminder</span>\n        </Button>\n      </InputGroup>\n\n      <Form.Control.Feedback type=\"invalid\" style={{ display: hasError ? 'block' : 'none' }}>\n        {!dateVal ? 'Must not be empty' : 'Time must be in the future'}\n      </Form.Control.Feedback>\n    </Form>\n  );\n}\n\nexport default DatePicker;\n","/**\n * @param {string} tag a unique id\n * @param {string} title what the notification will say\n * @param {number} timestamp Date.now()\n */\nexport const createScheduledNotification = async (tag, title, timestamp) => {\n  if ('showTrigger' in Notification.prototype) {\n    const registration = await navigator.serviceWorker.getRegistration();\n    const permission = await Notification.requestPermission();\n    if (permission === 'granted') {\n      registration.showNotification(title, {\n        tag: tag,\n        body: 'This notification was scheduled 30 seconds ago',\n        showTrigger: new window.TimestampTrigger(timestamp + 30 * 1000),\n\n        data: {\n          url: window.location.href, // pass the current url to the notification\n        },\n        // badge: './assets/badge.png',\n        // icon: './assets/icon.png',\n        actions: [\n          {\n            action: 'open',\n            title: 'Open app',\n          },\n          {\n            action: 'close',\n            title: 'Close notification',\n          },\n        ],\n      });\n      return true;\n    } else {\n      return false;\n    }\n  }\n};\n\n/**\n * @param {string} tag the id of the notification to remove\n */\nexport const cancelScheduledNotification = async (tag) => {\n  if ('showTrigger' in Notification.prototype) {\n    const registration = await navigator.serviceWorker.getRegistration();\n    const notifications = await registration.getNotifications({\n      tag: tag,\n      includeTriggered: true,\n    });\n    notifications.forEach((notification) => notification.close());\n  }\n};\n","import { useEffect } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport { DateTime } from 'luxon';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addReminder, removeReminder } from 'features/Todo/todoSlice';\nimport { updateSimpleSetting, selectAllowNotifications } from 'redux/settingsSlice';\nimport Button from 'react-bootstrap/Button';\nimport DatePicker from 'components/DatePicker/DatePicker';\nimport { createScheduledNotification, cancelScheduledNotification } from 'helpers/notifications';\nimport styles from 'components/TodoItemReminder/TodoItemReminder.module.css';\n\nfunction TodoItemReminder({ todo }) {\n  const { id, title, reminders = [] } = todo;\n  const dispatch = useDispatch();\n  const allowed = useSelector(selectAllowNotifications);\n\n  useEffect(() => {\n    Notification.requestPermission()\n      .then((permission) => {\n        dispatch(\n          updateSimpleSetting({\n            settingsKey: 'allowNotification',\n            value: permission === 'granted',\n          })\n        );\n      })\n      .catch(console.error);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (!allowed) {\n    <div className={styles.settingsWrap}>\n      <p>Notifications have been disabled</p>\n    </div>;\n  }\n\n  return (\n    <div className={styles.settingsWrap}>\n      <DatePicker\n        required\n        onTimeAccepted={(time) => {\n          if (!time) return;\n          const tag = uuid();\n          const timestamp = DateTime.fromISO(time).toMillis();\n          createScheduledNotification(tag, title, timestamp)\n            .then((result) => {\n              if (result) {\n                dispatch(\n                  addReminder({\n                    id,\n                    tag,\n                    timestamp,\n                  })\n                );\n              } else {\n                alert('Error setting up notification');\n              }\n            })\n            .catch((e) => {\n              console.error(e);\n            });\n        }}\n      />\n      {reminders.length > 0 && (\n        <div>\n          <p className=\"mb-0 mt-4 fw-bold\">Scheduled reminders:</p>\n          <ul className={styles.list}>\n            {reminders.map((r) => (\n              <li key={r.tag}>\n                {DateTime.fromMillis(r.timestamp).toLocaleString(DateTime.DATETIME_MED)}{' '}\n                <Button\n                  variant=\"secondary\"\n                  className=\"rounded-circle\"\n                  onClick={() => {\n                    dispatch(removeReminder({ id, tag: r.tag }));\n                    cancelScheduledNotification(r.tag).catch((e) => {\n                      console.error(e);\n                    });\n                  }}\n                >\n                  <i className=\"bi bi-x-lg\" />\n                  <span className=\"visually-hidden\">delete this reminder</span>\n                </Button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default TodoItemReminder;\n","import { useRef, useEffect } from 'react';\n\nfunction ContentEditable({ text, onChange, label, ...props }) {\n  const ref = useRef(null);\n\n  useEffect(() => {\n    // prevent the cursor from jumping to the front when `text` changes externally\n    if (document.activeElement === ref.current) {\n      // helpful src: https://stackoverflow.com/a/3866442\n      const range = document.createRange(); // Create a range (a range is a like the selection but invisible)\n      range.selectNodeContents(ref.current); // Select the entire contents of the element with the range\n      range.collapse(false); // collapse the range to the end point. false means collapse to end rather than the start\n      const selection = window.getSelection(); // get the selection object (allows you to change selection)\n      selection.removeAllRanges(); // remove any selections already made\n      selection.addRange(range); // make the range you have just created the visible selection\n    }\n  }, [text]);\n\n  return (\n    <div\n      ref={ref}\n      role=\"textbox\"\n      contentEditable=\"true\"\n      suppressContentEditableWarning={true}\n      onInput={onChange}\n      {...props}\n    >\n      {text}\n    </div>\n  );\n}\n\nexport default ContentEditable;\n","import { useState, forwardRef } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { debounce } from 'lodash-es';\nimport { Row, Col, Form, Button, InputGroup } from 'react-bootstrap';\nimport classNames from 'classnames';\nimport { removeTodo, completeTodo, openTodo, updateTodo } from 'features/Todo/todoSlice';\nimport { TODO_STATUS } from 'features/Todo/TodoModel';\nimport TodoItemReminder from 'components/TodoItemReminder';\nimport ContentEditable from 'components/ContentEditable';\nimport { cancelScheduledNotification } from 'helpers/notifications';\nimport styles from 'features/Todo/TodoItem.module.css';\n\nconst { DONE, OPEN } = TODO_STATUS;\n\nfunction TodoItem({ todo, onDeleteItem = () => {}, ...props }, ref) {\n  const { id, title, status } = todo;\n  const dispatch = useDispatch();\n  const [showSettings, setShowSettings] = useState(false);\n  const [isDeleting, setIsDeleting] = useState(false);\n\n  const debouncedUpdate = debounce((title) => {\n    dispatch(updateTodo({ id, title }));\n  }, 1000);\n\n  function onChange(e) {\n    debouncedUpdate(e.currentTarget.textContent);\n  }\n\n  const isDone = status === DONE;\n\n  return (\n    <Row\n      ref={ref}\n      {...props}\n      as=\"li\"\n      className={classNames('gx-0 mb-1', styles.fadeIn, {\n        [styles.fadeOut]: isDeleting,\n      })}\n    >\n      {status === OPEN && (\n        <Col xs=\"auto\" className={`align-items-center d-flex ${styles.grip}`}>\n          <i className=\"bi bi-grip-vertical\" />\n        </Col>\n      )}\n      <Col xs=\"auto\">\n        <Form.Check className={styles.check} id={`todo-checkbox-${id}`}>\n          <Form.Check.Input\n            type=\"checkbox\"\n            checked={isDone}\n            onChange={(e) => {\n              if (e.target.checked) {\n                dispatch(completeTodo(id));\n              } else {\n                dispatch(openTodo(id));\n              }\n            }}\n          />\n          <Form.Check.Label htmlFor={`todo-checkbox-${id}`} className=\"visually-hidden\">\n            Mark done\n          </Form.Check.Label>\n        </Form.Check>\n      </Col>\n      <Col>\n        <InputGroup>\n          {isDone && (\n            <div\n              className={`${styles.control} form-control text-muted text-decoration-line-through`}\n            >\n              {title}\n            </div>\n          )}\n          {!isDone && (\n            <ContentEditable\n              onChange={onChange}\n              className={classNames(styles.control, 'form-control')}\n              text={title}\n            />\n          )}\n\n          {!isDone && (\n            <Button\n              variant=\"link\"\n              title=\"add reminder\"\n              onClick={() => {\n                setShowSettings(!showSettings);\n              }}\n            >\n              <i className=\"bi bi-bell\" />\n              <span className=\"visually-hidden\">add reminder</span>\n            </Button>\n          )}\n          <Button\n            className={styles.remove}\n            title=\"delete\"\n            variant=\"link\"\n            onClick={() => {\n              setIsDeleting(true);\n              onDeleteItem(id);\n              todo.reminders?.forEach((todo) => {\n                cancelScheduledNotification(todo.tag).catch(console.error);\n              });\n              setTimeout(() => {\n                dispatch(removeTodo(id));\n              }, 500);\n            }}\n          >\n            <i className=\"bi bi-trash\" />\n            <span className=\"visually-hidden\">delete</span>\n          </Button>\n        </InputGroup>\n      </Col>\n      {showSettings && (\n        <Col xs={12}>\n          <TodoItemReminder todo={todo} />\n        </Col>\n      )}\n    </Row>\n  );\n}\n\nexport default forwardRef(TodoItem);\n","import { Draggable } from 'react-beautiful-dnd';\nimport { TODO_STATUS } from 'features/Todo/TodoModel';\nimport TodoItem from './TodoItem';\n\nconst { DONE } = TODO_STATUS;\n\nfunction DraggableTodo({ todo, index, ...props }) {\n  const { id, status } = todo;\n\n  const getItemStyle = (isDragging, draggableStyle) => {\n    const styles = {\n      ...draggableStyle,\n    };\n\n    if (isDragging) {\n      styles.userSelect = 'none';\n      styles.border = '1px solid lightgreen'\n    }\n\n    if (status === DONE) {\n      styles.display = 'none';\n    }\n\n    return styles;\n  };\n\n  return (\n    <Draggable draggableId={id} index={index}>\n      {(provided, snapshot) => (\n        <TodoItem\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          style={getItemStyle(snapshot.isDragging, provided.draggableProps.style)}\n          todo={todo}\n          {...props}\n        />\n      )}\n    </Draggable>\n  );\n}\n\nexport default DraggableTodo;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Button, InputGroup, Form } from 'react-bootstrap';\nimport { addTodo } from 'features/Todo/todoSlice';\n\nfunction AddTodoForm() {\n  const dispatch = useDispatch();\n  const [title, setTitle] = useState('');\n  const [hasError, setHasError] = useState(false);\n\n  function handleChange(event) {\n    const { value } = event.currentTarget;\n    if (value.length > 150) {\n      event.preventDefault();\n      setHasError(true);\n      return;\n    }\n\n    setHasError(false);\n    setTitle(value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    dispatch(addTodo(title));\n    setTitle('');\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <InputGroup>\n        <Form.Control\n          onChange={handleChange}\n          value={title}\n          aria-label=\"Enter todo item\"\n          aria-describedby=\"basic-addon2\"\n        />\n        <Button type=\"submit\" variant=\"outline-primary\" id=\"button-addon2\">\n          <i className=\"bi bi-plus\" />\n        </Button>\n      </InputGroup>\n      <Form.Control.Feedback type=\"invalid\" style={{ display: hasError ? 'block' : 'none' }}>\n        Max 150 characters\n      </Form.Control.Feedback>\n    </form>\n  );\n}\n\nexport default AddTodoForm;\n","import { useEffect } from 'react';\nimport styles from 'components/SnackBar/SnackBar.module.css';\n\nfunction SnackBar({ title, actionTitle, action, onClose }) {\n  useEffect(() => {\n    const timeout = setTimeout(onClose, 5000);\n    return function cleanup() {\n      window.clearTimeout(timeout);\n    };\n  }, [onClose]);\n\n  return (\n    <div role=\"alert\" className={styles.snackWrap}>\n      <div className={styles.snackInner}>\n        <div>{title}</div>\n        <div className={styles.actionWrap}>\n          {action && actionTitle && (\n            <button className={styles.action} type=\"button\" onClick={action}>\n              {actionTitle}\n            </button>\n          )}\n\n          <button type=\"button\" className={styles.close} onClick={onClose}>\n            <i className=\"bi bi-x-lg\" />\n            <span className=\"visually-hidden\">close</span>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SnackBar;\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ActionCreators } from 'redux-undo';\nimport { selectTodos, reorder } from 'features/Todo/todoSlice';\nimport TodoItem from 'features/Todo/TodoItem';\nimport DraggableTodo from 'features/Todo/DraggableTodo';\nimport { TODO_STATUS } from 'features/Todo/TodoModel';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport TodoForm from 'components/AddTodoForm/AddTodoForm';\nimport SnackBar from 'components/SnackBar/SnackBar';\nconst { DONE } = TODO_STATUS;\n\nfunction HomePage() {\n  const todos = useSelector(selectTodos);\n  const dispatch = useDispatch();\n  const [showUndo, setShowUndo] = useState(false);\n\n  const completed = todos.filter((todo) => todo.status === DONE);\n\n  function onDelete() {\n    setShowUndo(true);\n  }\n\n  function onDragEnd(result) {\n    if (!result.destination) {\n      return;\n    }\n\n    dispatch(\n      reorder({\n        id: result.draggableId,\n        endIndex: result.destination.index,\n      })\n    );\n  }\n\n  return (\n    <>\n      <Container>\n        <Row>\n          <Col>\n            <DragDropContext onDragEnd={onDragEnd}>\n              <Droppable droppableId=\"home-list\">\n                {(provided) => (\n                  <ul\n                    {...provided.droppableProps}\n                    ref={provided.innerRef}\n                    className=\"list-unstyled\"\n                  >\n                    {todos &&\n                      todos.map((todo, index) => (\n                        <DraggableTodo\n                          key={todo.id}\n                          todo={todo}\n                          onDeleteItem={onDelete}\n                          index={index}\n                        />\n                      ))}\n                    {provided.placeholder}\n                  </ul>\n                )}\n              </Droppable>\n            </DragDropContext>\n\n            <TodoForm />\n\n            {showUndo && (\n              <SnackBar\n                title=\"Deleted todo item\"\n                actionTitle=\"undo\"\n                action={() => {\n                  dispatch(ActionCreators.undo());\n                  setShowUndo(false);\n                }}\n                onClose={() => {\n                  setShowUndo(false);\n                }}\n              />\n            )}\n\n            {completed.length > 0 && (\n              <ul className=\"list-unstyled mt-4\">\n                {completed.map((todo) => (\n                  <TodoItem key={todo.id} todo={todo} onDeleteItem={onDelete} />\n                ))}\n              </ul>\n            )}\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n}\n\nexport default HomePage;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { Container, Row, Col, Form } from 'react-bootstrap';\nimport { updateSimpleSetting } from 'redux/settingsSlice';\n\nfunction SettingsPage() {\n  const dispatch = useDispatch();\n  const allSettings = useSelector((state) => state.settings);\n\n  function requestPermission() {\n    Notification.requestPermission().then((permission) => {\n      dispatch(\n        updateSimpleSetting({\n          settingsKey: 'allowNotification',\n          value: permission === 'granted',\n        })\n      );\n    });\n  }\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <h1>Settings</h1>\n        </Col>\n      </Row>\n      <Row className=\"mt-4\">\n        <Col>Allow notifications</Col>\n        <Col xs=\"auto\">\n          <Form.Check\n            type=\"switch\"\n            id=\"allowNotifications\"\n            aria-label=\"Toggle Allow Notifications\"\n            checked={allSettings.allowNotification}\n            onChange={(e) => {\n              if (e.target.checked) {\n                requestPermission();\n              } else {\n                dispatch(\n                  updateSimpleSetting({\n                    settingsKey: 'allowNotification',\n                    value: false,\n                  })\n                );\n              }\n            }}\n          />\n        </Col>\n      </Row>\n      <Row className=\"mt-4\">\n        <Col>Dark Mode</Col>\n        <Col xs=\"auto\">\n          <fieldset>\n            <Form.Check\n              inline\n              type=\"radio\"\n              id=\"darkMode-on\"\n              name=\"darkMode\"\n              label=\"on\"\n              checked={allSettings.darkMode === 'on'}\n              value=\"on\"\n              onChange={(e) => {\n                dispatch(\n                  updateSimpleSetting({\n                    settingsKey: 'darkMode',\n                    value: 'on',\n                  })\n                );\n              }}\n            />\n            <Form.Check\n              inline\n              type=\"radio\"\n              id=\"darkMode-off\"\n              name=\"darkMode\"\n              label=\"off\"\n              checked={allSettings.darkMode === 'off'}\n              value=\"off\"\n              onChange={(e) => {\n                dispatch(\n                  updateSimpleSetting({\n                    settingsKey: 'darkMode',\n                    value: 'off',\n                  })\n                );\n              }}\n            />\n            <Form.Check\n              inline\n              type=\"radio\"\n              id=\"darkMode-system\"\n              name=\"darkMode\"\n              label=\"OS\"\n              checked={allSettings.darkMode === 'system'}\n              value=\"system\"\n              onChange={(e) => {\n                dispatch(\n                  updateSimpleSetting({\n                    settingsKey: 'darkMode',\n                    value: 'system',\n                  })\n                );\n              }}\n            />\n          </fieldset>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default SettingsPage;\n","import { Navbar, Container, Nav } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nfunction OurNavbar({darkMode}) {\n  let bg = \"light\";\n  let variant = \"light\";\n  const prefersDarkScheme = window.matchMedia(\"(prefers-color-scheme: dark)\");\n\n  if (darkMode === \"on\" ||  prefersDarkScheme.matches) {\n    bg = \"dark\";\n    variant = \"dark\";\n  }\n\n  return (\n    <Navbar bg={bg} variant={variant} expand=\"md\" className=\"mb-2\">\n      <Container>\n        <Navbar.Brand as={Link} to=\"/\">Todo+</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"todo-nav\" />\n        <Navbar.Collapse id=\"todo-nav\">\n          <Nav className=\"me-auto\">\n            <Nav.Link as={Link} to=\"/settings\">Settings</Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n}\n\nexport default OurNavbar;","import { useEffect } from 'react';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport styles from './App.module.css';\nimport NetworkStatus from 'components/NetworkStatus';\nimport HomePage from 'pages/Home';\nimport SettingsPage from 'pages/Settings';\nimport { selectDarkMode } from 'redux/settingsSlice';\nimport Navbar from 'components/Navbar';\nimport { Container } from 'react-bootstrap';\n\n/**\n * Note: using HashRouter instead of BrowserRouter because Github pages does not support pushState\n * https://create-react-app.dev/docs/deployment/#notes-on-client-side-routing\n */\n\nfunction App() {\n  const darkMode = useSelector(selectDarkMode);\n\n  useEffect(() => {\n    if (darkMode === 'on') {\n      document.body.classList.add('dark-theme');\n      document.body.classList.remove('light-theme');\n    } else if (darkMode === 'off') {\n      document.body.classList.remove('dark-theme');\n      document.body.classList.add('light-theme');\n    } else {\n      document.body.classList.remove('dark-theme');\n      document.body.classList.remove('light-theme');\n    }\n  }, [darkMode]);\n\n  return (\n    <Router>\n      <Navbar darkMode={darkMode} />\n      <main className=\"pb-4\">\n        <Switch>\n          <Route path=\"/\" exact>\n            <HomePage />\n          </Route>\n          <Route path=\"/settings\" exact>\n            <SettingsPage />\n          </Route>\n        </Switch>\n      </main>\n      <footer className={`${styles.footer} bg-light`}>\n        <Container>\n          <NetworkStatus />\n        </Container>\n      </footer>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { configureStore, combineReducers } from '@reduxjs/toolkit';\nimport undoable from 'redux-undo';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist-indexeddb-storage';\nimport todoReducer from 'features/Todo/todoSlice';\nimport settingsReducer from 'redux/settingsSlice';\n\nconst rootReducer = combineReducers({\n  todos: undoable(todoReducer, {\n    limit: 1,\n  }),\n  settings: settingsReducer,\n});\n\nconst persistConfig = {\n  key: 'root',\n  version: 1,\n  storage: storage('TodoDB'),\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n});\n\nexport let persistor = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap-icons/font/bootstrap-icons.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}