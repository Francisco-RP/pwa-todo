{"version":3,"sources":["components/NetworkStatus/status.js","components/NetworkStatus/index.js","assets/logo512.png","components/Navbar/Navbar.jsx","features/Todo/TodoModel.js","features/Todo/todoSlice.js","redux/settingsSlice.js","components/Utils.jsx","components/DatePicker.jsx","helpers/notifications.js","components/TodoItemReminder/index.jsx","components/ContentEditable/index.jsx","components/OverflowMenu/index.jsx","features/Todo/TodoItem.js","features/Todo/DraggableTodo.js","components/AddTodoForm/AddTodoForm.jsx","components/SnackBar/SnackBar.jsx","features/Todo/TodoList.js","pages/Home.jsx","pages/Settings.jsx","App.js","hooks/useCheckNotification.js","serviceWorkerRegistration.js","redux/store.js","index.js","helpers/pwa.js","features/Todo/TodoItem.module.css","components/NetworkStatus/NetworkStatus.module.css","components/TodoItemReminder/TodoItemReminder.module.css","components/SnackBar/SnackBar.module.css","components/Navbar/Navbar.module.css","App.module.css"],"names":["ONLINE","OFFLINE","connection","navigator","mozConnection","webkitConnection","online_types","getStatus","type","includes","isOnline","a","window","onLine","url","URL","location","origin","searchParams","set","Date","now","fetch","toString","method","response","ok","NetworkStatus","className","props","useState","status","setStatus","textRef","useRef","useEffect","current","classList","remove","styles","animate","offsetWidth","add","statusCheck","callback","handleChange","console","log","addEventListener","check","cleanup","removeEventListener","handleOnline","handleOffline","getNetworkStatus","then","title","classNames","ref","text","OurNavbar","darkMode","bg","variant","prefersDarkScheme","matchMedia","matches","Navbar","expand","Container","Brand","as","Link","to","logo","src","alt","Toggle","aria-controls","Collapse","id","Nav","TODO_STATUS","modifyTodo","todo","properties","Object","keys","forEach","key","modified","toISOString","todoSlice","createSlice","name","initialState","items","reducers","addTodo","state","action","push","payload","uuid","created","undefined","reminders","updateTodo","find","item","removeTodo","index","findIndex","splice","completeTodo","openTodo","reorder","endIndex","removed","addReminder","tag","timestamp","createReminder","removeReminder","clearPastReminders","length","filter","actions","selectTodos","todos","present","settingsSlice","allowNotification","supportsNotifications","updateSetting","selectDarkMode","settings","selectAllowNotifications","selectSupportsNotifications","Icon","VisuallyHidden","children","El","DatePicker","required","onTimeAccepted","dateVal","setDateVal","validated","setValidated","hasError","setHasError","Form","noValidate","onSubmit","event","form","currentTarget","preventDefault","stopPropagation","checkValidity","Label","htmlFor","InputGroup","Control","value","min","DateTime","plus","minutes","toISO","split","slice","join","onChange","e","Button","Feedback","style","display","createScheduledNotification","Notification","prototype","Error","serviceWorker","getRegistration","registration","requestPermission","showNotification","body","showTrigger","TimestampTrigger","data","href","badge","icon","cancelScheduledNotification","getNotifications","includeTriggered","notifications","notification","close","TodoItemReminder","onClose","dispatch","useDispatch","allowed","useSelector","supported","closeBtn","onClick","settingsWrap","time","fromISO","toMillis","catch","error","alert","message","list","map","r","fromMillis","toLocaleString","DATETIME_MED","ContentEditable","label","document","activeElement","range","createRange","selectNodeContents","collapse","selection","getSelection","removeAllRanges","addRange","role","contentEditable","suppressContentEditableWarning","onInput","cursor","CustomToggle","forwardRef","OverflowMenu","Dropdown","align","onSelect","eventKey","Menu","i","Item","DONE","OPEN","TodoItem","onDeleteItem","showSettings","setShowSettings","isDeleting","setIsDeleting","debouncedUpdate","debounce","isDone","overflowMenuItems","setTimeout","unshift","Row","fadeIn","fadeOut","Col","xs","grip","Check","Input","checked","target","control","textContent","DraggableTodo","getItemStyle","isDragging","draggableStyle","userSelect","transform","match","val","parseFloat","y","draggableId","provided","snapshot","innerRef","draggableProps","dragHandleProps","AddTodoForm","setTitle","aria-label","aria-describedby","SnackBar","actionTitle","timeout","clearTimeout","snackWrap","snackInner","actionWrap","TodoList","showUndo","setShowUndo","completed","onDelete","onDragEnd","result","destination","droppableId","droppableProps","placeholder","ActionCreators","undo","HomePage","SettingsPage","allSettings","permission","inline","App","tempTag","useCheckNotification","path","exact","Home","Settings","footer","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","register","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","rootReducer","combineReducers","undoable","todoReducer","limit","settingsReducer","persistConfig","version","storage","persistedReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","render","StrictMode","loading","getElementById","process","headers","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration","manifest","querySelector","blob","reader","FileReader","onload","readAsDataURL","module","exports"],"mappings":"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","file":"static/js/main.20d305b2.chunk.js","sourcesContent":["export const ONLINE = 'online';\nexport const OFFLINE = 'offline';\n\nconst connection = navigator.connection || navigator.mozConnection || navigator.webkitConnection;\n\nconst online_types = ['bluetooth', 'cellular', 'ethernet', 'wifi', 'wimax', 'other', 'unknown'];\n\nfunction getStatus(type) {\n  if (online_types.includes(type)) {\n    return ONLINE;\n  } else {\n    return OFFLINE;\n  }\n}\n\nasync function isOnline() {\n  // some help from: https://dev.to/maxmonteil/is-your-app-online-here-s-how-to-reliably-know-in-just-10-lines-of-js-guide-3in7\n  if (!window.navigator.onLine) return OFFLINE;\n\n  // avoid CORS errors with a request to your own origin\n  const url = new URL(window.location.origin);\n\n  // random value to prevent cached responses\n  url.searchParams.set('rand', Date.now());\n\n  try {\n    const response = await fetch(url.toString(), { method: 'HEAD' });\n\n    return response.ok ? ONLINE : OFFLINE;\n  } catch {\n    return OFFLINE;\n  }\n}\n\nexport function getNetworkStatus(callback) {\n  if (connection && connection.type) {\n    console.log('🔌 - using navigtor.connection.type to check network status');\n    function handleChange() {\n      callback(getStatus(connection.type));\n    }\n\n    connection.addEventListener('change', handleChange);\n\n    return {\n      check: async () => getStatus(connection.type),\n      cleanup: () => connection.removeEventListener('change', handleChange),\n    };\n  }\n\n  console.log('🔌 - using navigtor.onLine and fallback to check network status');\n\n  function handleOnline() {\n    callback(ONLINE);\n  }\n  function handleOffline() {\n    callback(OFFLINE);\n  }\n  window.addEventListener('online', handleOnline);\n  window.addEventListener('offline', handleOffline);\n\n  return {\n    check: isOnline,\n    cleanup: () => {\n      window.removeEventListener('online', handleOnline);\n      window.removeEventListener('offline', handleOffline);\n    },\n  };\n}\n","import { useState, useEffect, useRef } from 'react';\nimport classNames from 'classnames';\nimport styles from 'components/NetworkStatus/NetworkStatus.module.css';\nimport { getNetworkStatus } from './status';\n\nfunction NetworkStatus({ className, ...props }) {\n  const [status, setStatus] = useState(null);\n  const textRef = useRef(null);\n\n  useEffect(() => {\n    // little \"hack\" to restart a CSS animation when the status changes\n    // src: https://css-tricks.com/restart-css-animation/\n    if (textRef.current) {\n      textRef.current.classList.remove(styles.animate);\n      void textRef.current.offsetWidth;\n      textRef.current.classList.add(styles.animate);\n    }\n  }, [status]);\n\n  useEffect(() => {\n    const statusCheck = getNetworkStatus(setStatus);\n\n    statusCheck.check().then(setStatus);\n\n    return statusCheck.cleanup;\n  }, []);\n\n  if (status === null) return null;\n\n  return (\n    <div className=\"d-flex align-items-center\">\n      <span\n        title={status}\n        {...props}\n        className={classNames(className, styles.status, styles[status])}\n      />\n      <span ref={textRef} className={styles.text}>\n        {status}\n      </span>\n    </div>\n  );\n}\n\nexport default NetworkStatus;\n","export default __webpack_public_path__ + \"static/media/logo512.fbe0032f.png\";","import { Navbar, Container, Nav } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport logo from 'assets/logo512.png';\nimport styles from './Navbar.module.css';\n\nfunction OurNavbar({ darkMode }) {\n  let bg = 'light';\n  let variant = 'light';\n  const prefersDarkScheme = window.matchMedia('(prefers-color-scheme: dark)');\n\n  if (darkMode === 'on' || (darkMode === 'system' && prefersDarkScheme.matches)) {\n    bg = 'dark';\n    variant = 'dark';\n  }\n\n  return (\n    <Navbar bg={bg} variant={variant} expand=\"md\" className=\"mb-2\">\n      <Container>\n        <Navbar.Brand as={Link} to=\"/\">\n          <img className={styles.logo} src={logo} alt=\"\" />\n          Todo+\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"todo-nav\" />\n        <Navbar.Collapse id=\"todo-nav\">\n          <Nav className=\"me-auto\">\n            <Nav.Link as={Link} to=\"/settings\">\n              Settings\n            </Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n}\n\nexport default OurNavbar;\n","import { v4 as uuid } from 'uuid';\n\nexport const TODO_STATUS = {\n  OPEN: 'open',\n  DONE: 'done',\n};\n\nexport function createReminder(tag, timestamp) {\n  return {\n    tag,\n    timestamp,\n  };\n}\n\nexport function createTodo(title) {\n  return {\n    id: uuid(),\n    title,\n    status: TODO_STATUS.OPEN,\n    created: new Date().toISOString(),\n    modified: undefined,\n    reminders: [],\n  };\n}\n\nexport function modifyTodo(todo, properties) {\n  Object.keys(properties).forEach((key) => {\n    todo[key] = properties[key];\n  });\n  todo.modified = new Date().toISOString();\n}\n","import { createSlice } from '@reduxjs/toolkit';\nimport { createTodo, modifyTodo, createReminder, TODO_STATUS } from 'features/Todo/TodoModel';\n\nconst initialState = {\n  items: [],\n};\n\nexport const todoSlice = createSlice({\n  name: 'todos',\n  initialState,\n  reducers: {\n    addTodo: (state, action) => {\n      state.items.push(createTodo(action.payload));\n    },\n\n    updateTodo: (state, action) => {\n      const { id, title } = action.payload;\n      const todo = state.items.find((item) => id === item.id);\n      if (todo) {\n        modifyTodo(todo, { title });\n      }\n    },\n\n    removeTodo: (state, action) => {\n      const { payload: id } = action;\n      const index = state.items.findIndex((todo) => todo.id === id);\n      if (index >= 0) {\n        state.items.splice(index, 1);\n      }\n    },\n\n    completeTodo: (state, action) => {\n      const { payload: id } = action;\n      const todo = state.items.find((item) => id === item.id);\n      if (todo) {\n        modifyTodo(todo, { status: TODO_STATUS.DONE });\n      }\n    },\n\n    openTodo: (state, action) => {\n      const { payload: id } = action;\n      const todo = state.items.find((item) => id === item.id);\n      if (todo) {\n        modifyTodo(todo, { status: TODO_STATUS.OPEN });\n      }\n    },\n\n    reorder: (state, action) => {\n      const { id, endIndex } = action.payload;\n      const index = state.items.findIndex((todo) => todo.id === id);\n      if (index >= 0) {\n        const [removed] = state.items.splice(index, 1);\n        state.items.splice(endIndex, 0, removed);\n      }\n    },\n\n    addReminder: (state, action) => {\n      const { id, tag, timestamp } = action.payload;\n      const todo = state.items.find((item) => id === item.id);\n      todo.reminders = todo.reminders || [];\n      if (todo) {\n        todo.reminders.push(createReminder(tag, timestamp));\n      }\n    },\n\n    removeReminder: (state, action) => {\n      const { id, tag } = action.payload;\n      const todo = state.items.find((item) => id === item.id);\n      if (todo) {\n        const index = todo.reminders.findIndex((todo) => todo.tag === tag);\n        if (index >= 0) {\n          todo.reminders.splice(index, 1);\n        }\n      }\n    },\n\n    clearPastReminders: (state) => {\n      state.items.forEach((item) => {\n        if (item.reminders.length > 0) {\n          item.reminders = item.reminders.filter(({ timestamp }) => {\n            return timestamp > Date.now();\n          });\n        }\n      });\n    },\n  },\n});\n\nexport const {\n  addTodo,\n  updateTodo,\n  removeTodo,\n  completeTodo,\n  openTodo,\n  reorder,\n  addReminder,\n  removeReminder,\n  clearPastReminders\n} = todoSlice.actions;\n\nexport const selectTodos = (state) => state.todos.present.items;\n\nexport default todoSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  allowNotification: false,\n  darkMode: \"system\",\n\n  // does the current browser support scheduled notifications\n  supportsNotifications: false,\n};\n\nexport const settingsSlice = createSlice({\n  name: 'settings',\n  initialState,\n  reducers: {\n    updateSetting: (state, action) => {\n      return {\n        ...state,\n        ...action.payload\n      }\n    },\n  },\n});\n\nexport const { updateSetting } = settingsSlice.actions;\n\nexport const selectDarkMode = (state) => state.settings.darkMode;\nexport const selectAllowNotifications = (state) => state.settings.allowNotification;\nexport const selectSupportsNotifications = (state) => state.settings.supportsNotifications;\n\nexport default settingsSlice.reducer;\n","import classNames from 'classnames';\n\nexport const Icon = ({ name }) => <i className={`bi bi-${name}`} />;\n\nexport const VisuallyHidden = ({ children, as: El = 'span', className, ...props }) => {\n  return (\n    <El {...props} className={classNames(className, 'visually-hidden')}>\n      {children}\n    </El>\n  );\n};\n","import { useState } from 'react';\nimport { Form, InputGroup, Button } from 'react-bootstrap';\nimport { DateTime } from 'luxon';\nimport { Icon } from 'components/Utils';\n\nfunction getMinTime() {\n  return DateTime.now().plus({ minutes: 1 }).toISO().split(':').slice(0, 2).join(':');\n}\n\nfunction DatePicker({ required, onTimeAccepted = () => {} }) {\n  const [dateVal, setDateVal] = useState('');\n  const [validated, setValidated] = useState(false);\n  const [hasError, setHasError] = useState(false);\n\n  const handleSubmit = (event) => {\n    const form = event.currentTarget;\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (form.checkValidity() === true) {\n      onTimeAccepted(dateVal);\n      setHasError(false);\n    } else {\n      setHasError(true);\n    }\n\n    setValidated(true);\n  };\n\n  return (\n    <Form noValidate validated={validated} onSubmit={handleSubmit}>\n      <Form.Label htmlFor=\"addNotifcationReminder\">Choose a reminder time:</Form.Label>\n      <InputGroup>\n        <Form.Control\n          required={required}\n          type=\"datetime-local\"\n          id=\"addNotifcationReminder\"\n          name=\"notifcationReminder\"\n          value={dateVal}\n          min={getMinTime()}\n          onChange={(e) => {\n            if (validated) setValidated(false);\n            setDateVal(e.currentTarget.value);\n          }}\n        />\n\n        <Button variant=\"primary\" type=\"submit\">\n          <Icon name=\"plus-lg\" />\n          <span className=\"visually-hidden\">add reminder</span>\n        </Button>\n      </InputGroup>\n\n      <Form.Control.Feedback type=\"invalid\" style={{ display: hasError ? 'block' : 'none' }}>\n        {!dateVal ? 'Must not be empty' : 'Time must be in the future'}\n      </Form.Control.Feedback>\n    </Form>\n  );\n}\n\nexport default DatePicker;\n","/**\n * @param {string} tag a unique id\n * @param {string} title what the notification will say\n * @param {number} timestamp Date.now()\n */\nexport const createScheduledNotification = async (tag, title, timestamp) => {\n  if (!('showTrigger' in Notification.prototype)) {\n    throw new Error('Scheduled notifications not supported');\n  }\n  const registration = await navigator.serviceWorker.getRegistration();\n  const permission = await Notification.requestPermission();\n  if (permission === 'granted') {\n    registration.showNotification(title, {\n      tag,\n      body: 'This notification was scheduled 30 seconds ago',\n      showTrigger: new window.TimestampTrigger(timestamp + 30 * 1000),\n\n      data: {\n        url: window.location.href, // pass the current url to the notification\n      },\n      badge: 'logo192.png',\n      icon: 'logo192.png',\n      actions: [\n        {\n          action: 'open',\n          title: 'Open app',\n        },\n        {\n          action: 'close',\n          title: 'Close notification',\n        },\n      ],\n    });\n  } else {\n    throw new Error('Notification permission denied');\n  }\n};\n\n/**\n * @param {string} tag the id of the notification to remove\n */\nexport const cancelScheduledNotification = async (tag) => {\n  const registration = await navigator.serviceWorker.getRegistration();\n  const notifications = await registration.getNotifications({\n    tag,\n    includeTriggered: true,\n  });\n  console.log(`🚀 ~ file: notifications.js ~ line 48 ~ cancelScheduledNotification ~ notifications`, notifications);\n  notifications.forEach((notification) => notification.close());\n};\n","import { v4 as uuid } from 'uuid';\nimport { DateTime } from 'luxon';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Button from 'react-bootstrap/Button';\n\nimport { addReminder, removeReminder } from 'features/Todo/todoSlice';\nimport { selectAllowNotifications, selectSupportsNotifications } from 'redux/settingsSlice';\n\nimport DatePicker from 'components/DatePicker';\nimport { createScheduledNotification, cancelScheduledNotification } from 'helpers/notifications';\nimport { Icon } from 'components/Utils';\nimport styles from 'components/TodoItemReminder/TodoItemReminder.module.css';\n\nfunction TodoItemReminder({ todo, onClose }) {\n  const { id, title, reminders = [] } = todo;\n  const dispatch = useDispatch();\n  const allowed = useSelector(selectAllowNotifications);\n  const supported = useSelector(selectSupportsNotifications);\n\n  const scheduleReminder = (time) => {\n    if (!time) return;\n    const tag = uuid();\n    const timestamp = DateTime.fromISO(time).toMillis();\n    createScheduledNotification(tag, title, timestamp)\n      .then(() => {\n        dispatch(\n          addReminder({\n            id,\n            tag,\n            timestamp,\n          })\n        );\n      })\n      .catch((e) => {\n        console.error(e);\n        alert(`Error adding notification. ${e.message}`);\n      });\n  };\n\n  const deleteReminder = (tag) => {\n    return () => {\n      dispatch(removeReminder({ id, tag }));\n      cancelScheduledNotification(tag).catch((e) => {\n        console.error(e);\n      });\n    };\n  };\n\n  const closeBtn = (\n    <button type=\"button\" className={`btn-reset ${styles.close}`} onClick={onClose}>\n      <Icon name=\"x-lg\" />\n      <span className=\"visually-hidden\">close</span>\n    </button>\n  );\n\n  if (!supported) {\n    return (\n      <div className={styles.settingsWrap}>\n        {closeBtn}\n        <p className=\"m-0\">\n          We're sorry, your platform does not currently support scheduled notifications\n        </p>\n      </div>\n    );\n  }\n\n  if (!allowed || !supported) {\n    return (\n      <div className={styles.settingsWrap}>\n        {closeBtn}\n        <p className=\"m-0\">\n          Notifications have been disabled. Enable them in <Link to=\"/settings\">settings</Link>\n        </p>\n      </div>\n    );\n  }\n\n  return (\n    <div className={styles.settingsWrap}>\n      {closeBtn}\n      <DatePicker required onTimeAccepted={scheduleReminder} />\n      {reminders.length > 0 && (\n        <div>\n          <p className=\"mb-0 mt-4 fw-bold\">Scheduled reminders:</p>\n          <ul className={styles.list}>\n            {reminders.map((r) => (\n              <li key={r.tag}>\n                {DateTime.fromMillis(r.timestamp).toLocaleString(DateTime.DATETIME_MED)}{' '}\n                <Button\n                  variant=\"secondary\"\n                  className=\"rounded-circle\"\n                  onClick={deleteReminder(r.tag)}\n                >\n                  <Icon name=\"x-lg\" />\n                  <span className=\"visually-hidden\">delete this reminder</span>\n                </Button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default TodoItemReminder;\n","import { useRef, useEffect } from 'react';\n\nfunction ContentEditable({ text, onChange, label, ...props }) {\n  const ref = useRef(null);\n\n  useEffect(() => {\n    // prevent the cursor from jumping to the front when `text` changes externally\n    if (document.activeElement === ref.current) {\n      // helpful src: https://stackoverflow.com/a/3866442\n      const range = document.createRange(); // Create a range (a range is a like the selection but invisible)\n      range.selectNodeContents(ref.current); // Select the entire contents of the element with the range\n      range.collapse(false); // collapse the range to the end point. false means collapse to end rather than the start\n      const selection = window.getSelection(); // get the selection object (allows you to change selection)\n      selection.removeAllRanges(); // remove any selections already made\n      selection.addRange(range); // make the range you have just created the visible selection\n    }\n  }, [text]);\n\n  return (\n    <div\n      ref={ref}\n      role=\"textbox\"\n      contentEditable=\"true\"\n      suppressContentEditableWarning={true}\n      onInput={onChange}\n      style={{ cursor: 'text' }}\n      {...props}\n    >\n      {text}\n    </div>\n  );\n}\n\nexport default ContentEditable;\n","import { forwardRef } from 'react';\nimport { Dropdown } from 'react-bootstrap';\nimport { Icon, VisuallyHidden } from 'components/Utils';\n\nconst CustomToggle = forwardRef(({ onClick }, ref) => (\n  <button\n    className=\"btn-reset\"\n    type=\"button\"\n    ref={ref}\n    onClick={(e) => {\n      e.preventDefault();\n      onClick(e);\n    }}\n  >\n    <VisuallyHidden>options</VisuallyHidden>\n    <Icon name=\"three-dots-vertical\" />\n  </button>\n));\n\nfunction OverflowMenu({ id, items = [] }) {\n  return (\n    <Dropdown\n      align=\"end\"\n      onSelect={(eventKey) => {\n        items[eventKey]?.onSelect?.();\n      }}\n    >\n      <Dropdown.Toggle as={CustomToggle} id={id} />\n\n      <Dropdown.Menu>\n        {items.map((item, i) => (\n          <Dropdown.Item eventKey={i} key={`${item.name}-${id}-${i}}`} className=\"d-flex gap-2 align-items-center\">\n            {item.icon && <Icon name={item.icon} />}\n            {item.name}\n          </Dropdown.Item>\n        ))}\n      </Dropdown.Menu>\n    </Dropdown>\n  );\n}\n\nexport default OverflowMenu;\n","import { useState, forwardRef } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { debounce } from 'lodash-es';\nimport { Row, Col, Form, InputGroup } from 'react-bootstrap';\nimport classNames from 'classnames';\n\nimport { removeTodo, completeTodo, openTodo, updateTodo } from 'features/Todo/todoSlice';\nimport { TODO_STATUS } from 'features/Todo/TodoModel';\n\nimport TodoItemReminder from 'components/TodoItemReminder';\nimport ContentEditable from 'components/ContentEditable';\nimport OverflowMenu from 'components/OverflowMenu';\nimport { Icon } from 'components/Utils';\n\nimport { cancelScheduledNotification } from 'helpers/notifications';\nimport styles from 'features/Todo/TodoItem.module.css';\n\nconst { DONE, OPEN } = TODO_STATUS;\n\nfunction TodoItem({ todo, onDeleteItem = () => {}, ...props }, ref) {\n  const { id, title, status } = todo;\n  const dispatch = useDispatch();\n  const [showSettings, setShowSettings] = useState(false);\n  const [isDeleting, setIsDeleting] = useState(false);\n\n  const debouncedUpdate = debounce((title) => {\n    dispatch(updateTodo({ id, title }));\n  }, 1000);\n\n  function onChange(e) {\n    debouncedUpdate(e.currentTarget.textContent);\n  }\n\n  function deleteItem() {\n    setIsDeleting(true);\n    onDeleteItem(id);\n    todo.reminders?.forEach((todo) => {\n      cancelScheduledNotification(todo.tag).catch(console.error);\n    });\n    // 500ms to allow the css animation to complete\n    setTimeout(() => {\n      dispatch(removeTodo(id));\n    }, 500);\n  }\n\n  const isDone = status === DONE;\n\n  const overflowMenuItems = [{ name: 'delete', onSelect: deleteItem, icon: 'trash' }];\n  if (!isDone) {\n    overflowMenuItems.unshift({\n      icon: 'bell',\n      name: 'reminders',\n      onSelect: () => {\n        setShowSettings(true);\n      },\n    });\n  }\n\n  return (\n    <Row\n      ref={ref}\n      {...props}\n      as=\"li\"\n      className={classNames('gx-0 mb-1', styles.fadeIn, {\n        [styles.fadeOut]: isDeleting,\n      })}\n    >\n      {status === OPEN && (\n        <Col xs=\"auto\" className={`align-items-center d-flex ${styles.grip}`}>\n          <Icon name=\"grip-vertical\" />\n        </Col>\n      )}\n      <Col xs=\"auto\">\n        <Form.Check className={styles.check} id={`todo-checkbox-${id}`}>\n          <Form.Check.Input\n            type=\"checkbox\"\n            checked={isDone}\n            onChange={(e) => {\n              if (e.target.checked) {\n                dispatch(completeTodo(id));\n              } else {\n                dispatch(openTodo(id));\n              }\n            }}\n          />\n          <Form.Check.Label htmlFor={`todo-checkbox-${id}`} className=\"visually-hidden\">\n            Mark done\n          </Form.Check.Label>\n        </Form.Check>\n      </Col>\n      <Col>\n        <InputGroup>\n          {isDone && (\n            <div\n              className={`${styles.control} form-control text-muted text-decoration-line-through`}\n            >\n              {title}\n            </div>\n          )}\n          {!isDone && (\n            <ContentEditable\n              onChange={onChange}\n              className={classNames(styles.control, 'form-control')}\n              text={title}\n            />\n          )}\n          <OverflowMenu id={`todo-options-${id}`} items={overflowMenuItems} />\n        </InputGroup>\n      </Col>\n      {showSettings && (\n        <Col xs={12}>\n          <TodoItemReminder todo={todo} onClose={() => setShowSettings(false)} />\n        </Col>\n      )}\n    </Row>\n  );\n}\n\nexport default forwardRef(TodoItem);\n","import { Draggable } from 'react-beautiful-dnd';\nimport { TODO_STATUS } from 'features/Todo/TodoModel';\nimport TodoItem from './TodoItem';\n\nconst { DONE } = TODO_STATUS;\n\nfunction DraggableTodo({ todo, index, ...props }) {\n  const { id, status } = todo;\n\n  const getItemStyle = (isDragging, draggableStyle) => {\n    const styles = {\n      ...draggableStyle,\n    };\n\n    if (isDragging) {\n      styles.userSelect = 'none';\n    }\n\n    if (status === DONE) {\n      styles.display = 'none';\n    }\n\n    // restrict dragging to only vertical by overriding the transform that powers the dragging\n    if (styles.transform) {\n      const re = /translate\\(([^)]+)\\)/i;\n      const [, xY] = styles.transform.match(re);\n      const [,y] = xY.split(', ').map(val => parseFloat(val, 10));\n      styles.transform = `translate(0px, ${y}px)`;\n    }\n\n    return styles;\n  };\n\n  return (\n    <Draggable draggableId={id} index={index}>\n      {(provided, snapshot) => (\n        <TodoItem\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          style={getItemStyle(snapshot.isDragging, provided.draggableProps.style)}\n          todo={todo}\n          {...props}\n        />\n      )}\n    </Draggable>\n  );\n}\n\nexport default DraggableTodo;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Button, InputGroup, Form } from 'react-bootstrap';\nimport { addTodo } from 'features/Todo/todoSlice';\nimport { Icon, VisuallyHidden } from 'components/Utils';\n\nfunction AddTodoForm() {\n  const dispatch = useDispatch();\n  const [title, setTitle] = useState('');\n  const [hasError, setHasError] = useState(false);\n\n  function handleChange(event) {\n    const { value } = event.currentTarget;\n    if (value.length > 150) {\n      event.preventDefault();\n      setHasError(true);\n      return;\n    }\n\n    setHasError(false);\n    setTitle(value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    dispatch(addTodo(title));\n    setTitle('');\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <InputGroup>\n        <Form.Control\n          onChange={handleChange}\n          value={title}\n          aria-label=\"Enter todo item\"\n          aria-describedby=\"basic-addon2\"\n        />\n        <Button type=\"submit\" variant=\"outline-primary\" id=\"button-addon2\">\n          <Icon name=\"plus-lg\" />\n          <VisuallyHidden>add todo</VisuallyHidden>\n        </Button>\n      </InputGroup>\n      <Form.Control.Feedback type=\"invalid\" style={{ display: hasError ? 'block' : 'none' }}>\n        Max 150 characters\n      </Form.Control.Feedback>\n    </form>\n  );\n}\n\nexport default AddTodoForm;\n","import { useEffect } from 'react';\nimport styles from 'components/SnackBar/SnackBar.module.css';\nimport { Icon } from 'components/Utils';\n\nfunction SnackBar({ title, actionTitle, action, onClose }) {\n  useEffect(() => {\n    const timeout = setTimeout(onClose, 5000);\n    return function cleanup() {\n      window.clearTimeout(timeout);\n    };\n  }, [onClose]);\n\n  return (\n    <div role=\"alert\" className={styles.snackWrap}>\n      <div className={styles.snackInner}>\n        <div>{title}</div>\n        <div className={styles.actionWrap}>\n          {action && actionTitle && (\n            <button className={styles.action} type=\"button\" onClick={action}>\n              {actionTitle}\n            </button>\n          )}\n\n          <button type=\"button\" className={styles.close} onClick={onClose}>\n            <Icon name=\"x-lg\" />\n            <span className=\"visually-hidden\">close</span>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SnackBar;\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ActionCreators } from 'redux-undo';\nimport { selectTodos, reorder } from 'features/Todo/todoSlice';\nimport TodoItem from 'features/Todo/TodoItem';\nimport DraggableTodo from 'features/Todo/DraggableTodo';\nimport { TODO_STATUS } from 'features/Todo/TodoModel';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport TodoForm from 'components/AddTodoForm/AddTodoForm';\nimport SnackBar from 'components/SnackBar/SnackBar';\nconst { DONE } = TODO_STATUS;\n\nfunction TodoList() {\n  const todos = useSelector(selectTodos);\n  const dispatch = useDispatch();\n  const [showUndo, setShowUndo] = useState(false);\n\n  const completed = todos.filter((todo) => todo.status === DONE);\n\n  function onDelete() {\n    setShowUndo(true);\n  }\n\n  function onDragEnd(result) {\n    if (!result.destination) {\n      return;\n    }\n\n    dispatch(\n      reorder({\n        id: result.draggableId,\n        endIndex: result.destination.index,\n      })\n    );\n  }\n\n  return (\n    <>\n      <Container>\n        <Row>\n          <Col>\n            <DragDropContext onDragEnd={onDragEnd}>\n              <Droppable droppableId=\"home-list\">\n                {(provided) => (\n                  <ul\n                    {...provided.droppableProps}\n                    ref={provided.innerRef}\n                    className=\"list-unstyled\"\n                  >\n                    {todos &&\n                      todos.map((todo, index) => (\n                        <DraggableTodo\n                          key={todo.id}\n                          todo={todo}\n                          onDeleteItem={onDelete}\n                          index={index}\n                        />\n                      ))}\n                    {provided.placeholder}\n                  </ul>\n                )}\n              </Droppable>\n            </DragDropContext>\n\n            <TodoForm />\n\n            {showUndo && (\n              <SnackBar\n                title=\"Deleted todo item\"\n                actionTitle=\"undo\"\n                action={() => {\n                  dispatch(ActionCreators.undo());\n                  setShowUndo(false);\n                }}\n                onClose={() => {\n                  setShowUndo(false);\n                }}\n              />\n            )}\n\n            {completed.length > 0 && (\n              <ul className=\"list-unstyled mt-4\">\n                {completed.map((todo) => (\n                  <TodoItem key={todo.id} todo={todo} onDeleteItem={onDelete} />\n                ))}\n              </ul>\n            )}\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n}\n\nexport default TodoList;\n","import TodoList from 'features/Todo/TodoList';\n\n// for now the home page is the Todo list\n// separated it just in case I want to change that later\nfunction HomePage() {\n  return <TodoList />;\n}\n\nexport default HomePage;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { Container, Row, Col, Form } from 'react-bootstrap';\nimport { updateSetting } from 'redux/settingsSlice';\n\nfunction SettingsPage() {\n  const dispatch = useDispatch();\n  const allSettings = useSelector((state) => state.settings);\n\n  function requestPermission() {\n    Notification.requestPermission().then((permission) => {\n      dispatch(\n        updateSetting({\n          allowNotification: permission === 'granted',\n        })\n      );\n    });\n  }\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <h1>Settings</h1>\n        </Col>\n      </Row>\n      <Row className=\"mt-4\">\n        <Col>Allow notifications</Col>\n        <Col xs=\"auto\">\n          <Form.Check\n            type=\"switch\"\n            id=\"allowNotifications\"\n            aria-label=\"Toggle Allow Notifications\"\n            checked={allSettings.allowNotification}\n            onChange={(e) => {\n              if (e.target.checked) {\n                requestPermission();\n              } else {\n                dispatch(updateSetting({ allowNotification: false }));\n              }\n            }}\n          />\n        </Col>\n      </Row>\n      <Row className=\"mt-4\">\n        <Col>Dark Mode</Col>\n        <Col xs=\"auto\">\n          <fieldset>\n            <Form.Check\n              inline\n              type=\"radio\"\n              id=\"darkMode-on\"\n              name=\"darkMode\"\n              label=\"on\"\n              checked={allSettings.darkMode === 'on'}\n              value=\"on\"\n              onChange={(e) => {\n                dispatch(updateSetting({ darkMode: 'on' }));\n              }}\n            />\n            <Form.Check\n              inline\n              type=\"radio\"\n              id=\"darkMode-off\"\n              name=\"darkMode\"\n              label=\"off\"\n              checked={allSettings.darkMode === 'off'}\n              value=\"off\"\n              onChange={(e) => {\n                dispatch(updateSetting({ darkMode: 'off' }));\n              }}\n            />\n            <Form.Check\n              inline\n              type=\"radio\"\n              id=\"darkMode-system\"\n              name=\"darkMode\"\n              label=\"OS\"\n              checked={allSettings.darkMode === 'system'}\n              value=\"system\"\n              onChange={(e) => {\n                dispatch(updateSetting({ darkMode: 'system' }));\n              }}\n            />\n          </fieldset>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default SettingsPage;\n","import { useEffect } from 'react';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Container } from 'react-bootstrap';\n\n// components\nimport NetworkStatus from 'components/NetworkStatus';\nimport Navbar from 'components/Navbar/Navbar';\n\n// pages\nimport HomePage from 'pages/Home';\nimport SettingsPage from 'pages/Settings';\n\n// redux, helpers, styles, etc\nimport useCheckNotification from 'hooks/useCheckNotification';\nimport { selectDarkMode } from 'redux/settingsSlice';\nimport { clearPastReminders } from 'features/Todo/todoSlice';\nimport styles from './App.module.css';\n\n/**\n * Note: using HashRouter instead of BrowserRouter because Github pages does not support pushState\n * https://create-react-app.dev/docs/deployment/#notes-on-client-side-routing\n */\n\nfunction App() {\n  const darkMode = useSelector(selectDarkMode);\n  const dispatch = useDispatch();\n\n  useCheckNotification();\n\n  useEffect(() => {\n    dispatch(clearPastReminders());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (darkMode === 'on') {\n      document.body.classList.add('dark-theme');\n      document.body.classList.remove('light-theme');\n    } else if (darkMode === 'off') {\n      document.body.classList.remove('dark-theme');\n      document.body.classList.add('light-theme');\n    } else {\n      document.body.classList.remove('dark-theme');\n      document.body.classList.remove('light-theme');\n    }\n  }, [darkMode]);\n\n  return (\n    <Router>\n      <Navbar darkMode={darkMode} />\n      <main className=\"pb-4\">\n        <Switch>\n          <Route path=\"/\" exact>\n            <HomePage />\n          </Route>\n          <Route path=\"/settings\" exact>\n            <SettingsPage />\n          </Route>\n        </Switch>\n      </main>\n      <footer className={`${styles.footer} bg-light`}>\n        <Container>\n          <NetworkStatus />\n        </Container>\n      </footer>\n    </Router>\n  );\n}\n\nexport default App;\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { DateTime } from 'luxon';\nimport { createScheduledNotification, cancelScheduledNotification } from 'helpers/notifications';\nimport { updateSetting } from 'redux/settingsSlice';\n\nexport default function useCheckNotification() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    /**\n     * Testing whether we can use scheduled notifications by trying to create one. If successful\n     * then we quickly cancel it\n     */\n    const tempTag = `test-reminder-${Date.now()}`;\n    const timestamp = DateTime.now().plus({ minutes: 2 }).toMillis();\n    createScheduledNotification(tempTag, 'test scheduled reminder', timestamp)\n      .then(() => {\n        cancelScheduledNotification(tempTag).catch(console.error);\n        dispatch(updateSetting({ supportsNotifications: true, allowNotification: true }));\n      })\n      .catch((e) => {\n        console.error('App.js createScheduledNotification:', e);\n        // if permission is not granted then we don't know if notifications are not supported yet\n        if (e.message.includes('permission')) {\n          dispatch(updateSetting({ allowNotification: false }));\n        } else {\n          dispatch(updateSetting({ supportsNotifications: false }));\n        }\n      });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { configureStore, combineReducers } from '@reduxjs/toolkit';\nimport undoable from 'redux-undo';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist-indexeddb-storage';\nimport todoReducer from 'features/Todo/todoSlice';\nimport settingsReducer from 'redux/settingsSlice';\n\nconst rootReducer = combineReducers({\n  todos: undoable(todoReducer, {\n    limit: 1,\n  }),\n  settings: settingsReducer,\n});\n\nconst persistConfig = {\n  key: 'root',\n  version: 1,\n  storage: storage('TodoDB'),\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n});\n\nexport let persistor = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap-icons/font/bootstrap-icons.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\nimport { iosReliableInstall } from 'helpers/pwa';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\niosReliableInstall();\n","import { once } from 'helpers/events';\n\n/**\n * on Android you need to request persistent storage so this handles that for you,\n *\n * on iOS this will always return true since iOS allows persistent storage by default after install\n */\nexport async function requestPersistentStorage() {\n  if (navigator.storage?.persist) {\n    const granted = await navigator.storage.persist();\n    console.log('persistent storage granted=', granted);\n    return granted;\n  }\n\n  if (typeof cb === 'function') return 'standalone' in navigator;\n}\n\nconst localStorageInstallKey = 'pwa_installed';\n\nexport const isInstalled = () => localStorage.getItem(localStorageInstallKey) === 'true';\n\n/**\n * This is only available in Chromium based browsers. Prevent the install banner showing and then\n * use the returned event later during a custom install like this: `event.prompt()`\n */\nexport function captureInstallEvent() {\n  if ('onbeforeinstallprompt' in window) {\n    once(window, 'appinstalled', function () {\n      localStorage.setItem(localStorageInstallKey, true);\n    });\n\n    return new Promise((resolve) => {\n      function handler(event) {\n        // prevent banner or infobar appearing asking to install/add-to-home\n        event.preventDefault();\n        // return event for future use\n        resolve(event);\n      }\n\n      once(window, 'beforeinstallprompt', handler);\n    });\n  }\n\n  return {\n    prompt: () => {}\n  }\n}\n\n/**\n * This is one method of checking if the app is already installed but I suggest using the localStorage\n * way instead. However, the iOS \n * @param {function} cb\n */\nexport function isAlreadyInstalled(cb) {\n  //check when the page is loaded if it matches one of the PWA display modes\n  once(window, 'DOMContentLoaded', function () {\n    cb(\n      navigator.standalone ||\n        window.matchMedia('(display-mode: standalone)').matches ||\n        window.matchMedia('(display-mode: fullscreen)').matches ||\n        window.matchMedia('(display-mode: minimal-ui)').matches\n    );\n  });\n\n  //but also add a listener. After app installation on desktop, the app will open in their own window right away.\n  once(window, 'DOMContentLoaded', function () {\n    window.matchMedia('(display-mode: standalone)').addEventListener(function (e) {\n      cb(e.matches);\n    });\n    window.matchMedia('(display-mode: fullscreen)').addEventListener(function (e) {\n      cb(e.matches);\n    });\n    window.matchMedia('(display-mode: minimal-ui)').addEventListener(function (e) {\n      cb(e.matches);\n    });\n  });\n}\n\n/**\n * This is a hack by Maximiliano Firtman\n *\n * This improves the reliability of an iOS install experience when use adds app to home screen and\n * the network connection cuts out. iOS tries getting the manifest and icon only at install time and\n * getting a 404 for those it reverts back to the screenshot icon\n *\n * IMPORTANT: When using this you must use absolute URLS in the manifest and test it again in every\n * new iOS version release.\n *\n * Tested and works in iOS 12, 13, 14, 14.5\n */\nexport function iosReliableInstall() {\n  if ('standalone' in navigator) {\n    // preload the app manifect for iOS safari\n    // manifest should always be at the root\n    fetch('manifest.json')\n      .then((r) => r.text())\n      .then((manifest) => {\n        document.querySelector(\n          'link[rel=\"manifest\"]'\n        ).href = `data:application/manifest+json;charset=utf-8,${manifest}`;\n      })\n      .catch(console.error);\n\n    fetch('logo180.png')\n      .then((r) => r.blob())\n      .then((blob) => {\n        const reader = new FileReader();\n        reader.onload = () => {\n          document.querySelector('link[rel=\"apple-touch-icon\"]').href = reader.result;\n        };\n        reader.readAsDataURL(blob);\n      })\n      .catch(console.error);\n  }\n}\n\nexport function getPWADisplayMode() {\n  const isStandalone = window.matchMedia('(display-mode: standalone)').matches;\n  if (document.referrer.startsWith('android-app://')) {\n    return 'pwa';\n  } else if (navigator.standalone || isStandalone) {\n    return 'standalone';\n  }\n  return 'browser';\n}\n\nexport function isThisDeviceRunningiOS() {\n  if ('standalone' in navigator) {\n    // this only works in iOS Safari\n    return true;\n  }\n\n  if (\n    ['iPad Simulator', 'iPhone Simulator', 'iPod Simulator', 'iPad', 'iPhone', 'iPod'].includes(\n      navigator.platform\n    )\n  ) {\n    return true;\n  }\n\n  // iPad on iOS 13\n  if (navigator.userAgent.includes('Mac') && 'ontouchend' in document) {\n    return true;\n  }\n\n  return false;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"check\":\"TodoItem_check__1Vyp5\",\"control\":\"TodoItem_control__Pk4k4\",\"grip\":\"TodoItem_grip__18YEZ\",\"remove\":\"TodoItem_remove__3Pi93\",\"fadeIn\":\"TodoItem_fadeIn__2SAdo\",\"fadeOut\":\"TodoItem_fadeOut__39KgA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"status\":\"NetworkStatus_status__jwDJp\",\"online\":\"NetworkStatus_online__31Mwq\",\"offline\":\"NetworkStatus_offline__1rOSz\",\"text\":\"NetworkStatus_text__22sfn\",\"animate\":\"NetworkStatus_animate__1709a\",\"quickReveal\":\"NetworkStatus_quickReveal__3u39r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settingsWrap\":\"TodoItemReminder_settingsWrap__1Vc_8\",\"list\":\"TodoItemReminder_list__3JAY8\",\"close\":\"TodoItemReminder_close__KyiOm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"snackWrap\":\"SnackBar_snackWrap__16cIp\",\"snackInner\":\"SnackBar_snackInner__1vwPc\",\"actionWrap\":\"SnackBar_actionWrap__10IA_\",\"action\":\"SnackBar_action__3MmYh\",\"close\":\"SnackBar_close__3aLzP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Navbar_logo__1H3m4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"App_footer__29Fsv\"};"],"sourceRoot":""}